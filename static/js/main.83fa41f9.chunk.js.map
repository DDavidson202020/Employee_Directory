{"version":3,"sources":["utils/API.js","components/Table.js","components/Header.js","components/Container.js","components/Main.js","App.js","index.js"],"names":["axios","get","Table","props","src","image","alt","first","last","email","age","city","state","Header","className","type","name","onChange","handleInput","placeholder","Container","fluid","children","Main","employees","search","filteredEmployees","isSorted","event","setState","target","value","filtered","filter","employee","toLowerCase","indexOf","handleSortFirst","sort","a","b","firstA","handleSortLast","lastA","lastB","comparison","handleSortAge","ageA","dob","ageB","API","then","res","data","results","catch","err","console","log","employeeInfo","this","map","i","key","picture","thumbnail","location","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83fa41f9.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// Export a method that gets employees from the User API\r\nexport default {\r\n  getEmployees() {\r\n    return axios.get(\"https://randomuser.me/api/?results=100&nat=us\");\r\n  }\r\n};","import React from \"react\";\r\n// a function that returns the table body on the page\r\nfunction Table(props) {\r\n    return (\r\n\r\n        <tbody>\r\n            <tr>\r\n                <td><img src={props.image} alt={props.first}></img></td>\r\n                <td>{props.first}</td>\r\n                <td>{props.last}</td>\r\n                <td>{props.email}</td>\r\n                <td>{props.age}</td>\r\n                <td>{props.city}</td>\r\n                <td>{props.state}</td>\r\n            </tr>\r\n        </tbody>\r\n\r\n    )\r\n}\r\nexport default Table;","import React from \"react\";\r\n// a function that returns the header of the page\r\nfunction Header(props) {\r\n    return (\r\n        <div className={\"jumbotron\"}>\r\n            <h1>Employee Management</h1>\r\n            <input\r\n            type=\"text\"\r\n            name=\"search\"\r\n            onChange={props.handleInput}\r\n            placeholder=\"Enter first name\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Table from \"./Table\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nclass Main extends React.Component {\r\n    // Initalize the state\r\n    state = {\r\n        employees: [],\r\n        search: \"\",\r\n        filteredEmployees: [],\r\n        isSorted: false\r\n    }\r\n    // React lifecycle method to get data from an API when the page loads\r\n    componentDidMount() {\r\n        API.getEmployees()\r\n            .then(res => {\r\n                this.setState({ employees: res.data.results, filteredEmployees: res.data.results })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    // Declare a function that handles input change\r\n    handleInput = (event) => {\r\n        this.setState({ search: event.target.value });\r\n        //Use the filter method to filter employees according to what user types in \r\n        const filtered = this.state.employees.filter((employee) => {\r\n            return (employee.name.first.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1);\r\n        })\r\n        // Set the state of filterEmployees \r\n        this.setState({ filteredEmployees: filtered })\r\n    }\r\n    // Declare a function that handle the sort by first name\r\n    handleSortFirst = () => {\r\n        // a function that sorts the array according to their first names starting from A,B,C...\r\n        function compare1(a, b) {\r\n            const firstA = a.name.first.toLowerCase();\r\n            const firstB = b.name.first.toLowerCase();\r\n            let comparison = 0;\r\n            if (firstA > firstB) {\r\n                comparison = 1;\r\n            } else {\r\n                comparison = -1;\r\n            }\r\n            return comparison;\r\n        }\r\n        // a function that sorts the array according to their first names starting from Z,Y,X...\r\n        function compare2(a, b) {\r\n            const firstA = a.name.first.toLowerCase();\r\n            const firstB = b.name.first.toLowerCase();\r\n            let comparison = 0;\r\n            if (firstB > firstA) {\r\n                comparison = 1;\r\n            } else {\r\n                comparison = -1;\r\n            }\r\n            return comparison;\r\n        }\r\n        // Check to see the current state to sort \r\n        if (this.state.isSorted) {\r\n            this.state.filteredEmployees.sort(compare1);\r\n            this.setState({\r\n                isSorted: false\r\n            })\r\n        } else {\r\n            this.state.filteredEmployees.sort(compare2);\r\n            this.setState({\r\n                isSorted: true\r\n            })\r\n\r\n        }\r\n\r\n        this.setState({ filteredEmployees: this.state.filteredEmployees });\r\n    }\r\n    // Declare a function that handles the sort by last name\r\n    handleSortLast = () => {\r\n        function compare1(a, b) {\r\n            const lastA = a.name.last.toLowerCase();\r\n            const lastB = b.name.last.toLowerCase();\r\n            let comparison = 0;\r\n            if (lastA > lastB) {\r\n                comparison = 1;\r\n            } else if (lastA < lastB) {\r\n                comparison = -1;\r\n            }\r\n            return comparison;\r\n        }\r\n        function compare2(a, b) {\r\n            const lastA = a.name.last.toLowerCase();\r\n            const lastB = b.name.last.toLowerCase();\r\n            let comparison = 0;\r\n            if (lastB > lastA) {\r\n                comparison = 1;\r\n            } else {\r\n                comparison = -1;\r\n            }\r\n            return comparison;\r\n        }\r\n        // Check to see the current state to sort \r\n        if (this.state.isSorted) {\r\n            this.state.filteredEmployees.sort(compare1);\r\n            this.setState({\r\n                isSorted: false\r\n            })\r\n        } else {\r\n            this.state.filteredEmployees.sort(compare2);\r\n            this.setState({\r\n                isSorted: true\r\n            })\r\n\r\n        }\r\n\r\n        this.setState({ filteredEmployees: this.state.filteredEmployees });\r\n    }\r\n    // Declare a function that handles sort by age\r\n    handleSortAge = () => {\r\n        function compare1(a, b) {\r\n            const ageA = a.dob.age;\r\n            const ageB = b.dob.age;\r\n            let comparison = 0;\r\n            if (ageA > ageB) {\r\n                comparison = 1;\r\n            } else if (ageA < ageB) {\r\n                comparison = -1;\r\n            }\r\n            return comparison;\r\n        }\r\n        function compare2(a, b) {\r\n            const ageA = a.dob.age;\r\n            const ageB = b.dob.age;\r\n            let comparison = 0;\r\n            if (ageB > ageA) {\r\n                comparison = 1;\r\n            } else {\r\n                comparison = -1;\r\n            }\r\n            return comparison;\r\n        }\r\n        // Check to see the current state to sort age\r\n        if (this.state.isSorted) {\r\n            this.state.filteredEmployees.sort(compare1);\r\n            this.setState({\r\n                isSorted: false\r\n            })\r\n        } else {\r\n            this.state.filteredEmployees.sort(compare2);\r\n            this.setState({\r\n                isSorted: true\r\n            })\r\n\r\n        }\r\n\r\n        this.setState({ filteredEmployees: this.state.filteredEmployees });\r\n    }\r\n\r\n    render() {\r\n        // A variable that stores the result from the map method\r\n        const employeeInfo = this.state.filteredEmployees.map((employee, i) => {\r\n            return (\r\n                <Table\r\n                    key={i}\r\n                    first={employee.name.first}\r\n                    last={employee.name.last}\r\n                    image={employee.picture.thumbnail}\r\n                    email={employee.email}\r\n                    age={employee.dob.age}\r\n                    state={employee.location.state}\r\n                    city={employee.location.city}\r\n                />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Container>\r\n                <Header\r\n                    handleInput={this.handleInput}\r\n                    value={this.state.search}\r\n                />\r\n                <div className={\"container-fluid\"}>\r\n                    <div className={\"table-responsive\"}>\r\n                        <table className={\"table\"}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Image</th>\r\n                                    <th>First Name<i onClick={this.handleSortFirst} className={\"fa fa-fw fa-sort\"}></i></th>\r\n                                    <th>Last Name<i onClick={this.handleSortLast} className={\"fa fa-fw fa-sort\"}></i></th>\r\n                                    <th>Email</th>\r\n                                    <th>Age<i onClick={this.handleSortAge} className={\"fa fa-fw fa-sort\"}></i></th>\r\n                                    <th>City</th>\r\n                                    <th>State</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {employeeInfo}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default Main;","import React from \"react\";\r\nimport Main from \"./components/Main\";\r\n\r\nfunction App() {\r\n    return (\r\n            <Main />\r\n    )\r\n}\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}